@using Microsoft.AspNet.Identity
@model IEnumerable<SimpleACCT.Models.Transaction>
 @{ 
     float total = 0;
     foreach (var m in Model)
     {
         total += m.Amount;
     }
 }
    <div class="row spacing">
        <div class="col-md-6">
            <h2>Greetings, @ViewData["FullName"].</h2>
        </div>
        <div class="col-md-6">
            <h4 class="total-income">Total Income: $@(Math.Ceiling(total * 100) / 100)</h4>
        </div>
    </div>
    
    <table class="table table-striped table-hover" id="money">
        <thead>
            <tr>
                <th>Category/Job</th>
                <th>Description</th>
                <th>Type</th>
                <th>Date</th>
                <th>Amount</th>
                @*<th>Date Added</th>*@
                @*<th>Paid</th>*@
                <th></th>
            </tr>
        </thead>
    </table>

    @section Scripts  {
        <script>
            $(document).ready(function () {
                $('#money').DataTable({
                    'ajax': {
                        'url': '/Transactions/LoadData',
                        'type': 'GET',
                        'datatype': 'json'
                    },
                    columns: [
                        {
                            mData: 'Category.Name',
                            mData: 'Id',
                            mData: function (data, type, dataToSet) {
                                return `<a href="Transactions/Edit/${data.Id}">${data.Category.Name}</a>`;
                            }
                        },
                        { data: 'Description', 'width': '30%' },
                        {
                            mData: 'TransactionType',
                            mData: function (data, type, dataToSet) {
                                if (data.TransactionType === 'mileage') {
                                    return `<span class="mileage">${data.TransactionType.toUpperCase()}</span>`;
                                } else if (data.TransactionType === 'expense') {
                                    return `<span class="expense">${data.TransactionType.toUpperCase()}</span>`;
                                } else if (data.TransactionType === 'income') {
                                    return `<span class="income">${data.TransactionType.toUpperCase()}</span>`;
                                } 
                                return data.TransactionType;
                            }
                        },
                        {
                            mData: 'Date',
                            mData: 'Category.Date',
                            mData: 'Category.Name',
                            mData: function (data, type, dataToSet) {

                                return (data.Category.Name === 'General Expense') ? data.Date : data.Category.Date;
                            }
                        },
                        { data: 'Amount', 'autoWidth': true, render: $.fn.dataTable.render.number(',', '.', 2, '$') },
                        //{ data: 'DateAdded' },
                        //{
                        //    mData: 'Paid',
                        //    mData: 'Amount',
                        //    mData: function (data, type, dataToSet) {
                        //        if (data.Amount < 0) {
                        //            return '';
                        //        }
                        //        return (data.Paid) ? 'Yes' : 'No';
                        //    }
                        //},
                        {
                            mData: 'Id',
                            mData: 'Amount',
                            mData: 'Category.Id',
                            mData: function (data, type, dataToSet) {
                                return data.Amount < 0 ? '' : `<a href="./Transactions/Invoice/${data.Id}/${data.Category.Id}" class="btn btn-info">Invoice</a>`;
                            }
                        }
                    ]


                });

            });

        </script>
    }